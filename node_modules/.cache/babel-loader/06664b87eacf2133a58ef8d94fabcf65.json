{"ast":null,"code":"var _jsxFileName = \"/Users/designinmind/Desktop/Portfolio/bro-app-firebase/src/components/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const {\n    updateEmail,\n    updatePassword,\n    currentUser\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleUpdateProfile(e) {\n    e.preventDefault();\n    if (passwordRef !== confirmPasswordRef) return setError('Passwords do not match');\n    const promises = [];\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(password.current.value));\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      return updateProfile();\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleUpdateProfile,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: emailRef,\n              type: \"email\",\n              defaultValue: currentUser.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: passwordRef,\n              type: \"password\",\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: confirmPasswordRef,\n              type: \"password\",\n              placeholder: \"Passwords must match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disable: loading,\n            className: \"w-100 mb-4 mt-4\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"6vhYBXPNPk5Q3pydPwI3zqBmD/A=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/designinmind/Desktop/Portfolio/bro-app-firebase/src/components/UpdateProfile.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","UpdateProfile","emailRef","passwordRef","confirmPasswordRef","updateEmail","updatePassword","currentUser","error","setError","loading","setLoading","history","handleUpdateProfile","e","preventDefault","promises","current","value","email","push","password","updateProfile","err","message"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nfunction UpdateProfile() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const confirmPasswordRef = useRef()\n    const { updateEmail, updatePassword, currentUser } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleUpdateProfile(e) {\n        e.preventDefault()\n        if(passwordRef !== confirmPasswordRef) return setError('Passwords do not match')\n\n        const promises = []\n        if(emailRef.current.value !== currentUser.email) {\n            promises.push(updateEmail(emailRef.current.value))\n        }\n        if(passwordRef.current.value) {\n            promises.push(updatePassword(password.current.value))\n        }\n\n        try {\n            setError('')\n            setLoading(true)\n            return updateProfile()\n        } catch(err) {\n            setError(err.message)\n        }\n        setLoading(false)\n    }\n    \n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Login</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleUpdateProfile}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control ref={emailRef} type=\"email\" defaultValue={currentUser.email} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control ref={passwordRef} type=\"password\" placeholder=\"Leave blank to keep the same\" />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control ref={confirmPasswordRef} type=\"password\" placeholder=\"Passwords must match\" />\n                        </Form.Group>\n                        <Button disable={loading} className=\"w-100 mb-4 mt-4\" type=\"submit\">Update</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Link to=\"/\">Cancel</Link>\n            </div>\n        </>\n    )\n}\n\nexport default UpdateProfile\n"]},"metadata":{},"sourceType":"module"}